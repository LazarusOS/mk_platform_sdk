package mokee.app {

  public final class Profile implements android.os.Parcelable {
    ctor public Profile(java.lang.String);
    method public void addSecondaryUuid(java.util.UUID);
    method public int compareTo(java.lang.Object);
    method public int describeContents();
    method public mokee.profiles.AirplaneModeSettings getAirplaneMode();
    method public mokee.profiles.BrightnessSettings getBrightness();
    method public java.util.Collection<mokee.profiles.ConnectionSettings> getConnectionSettings();
    method public int getDozeMode();
    method public int getExpandedDesktopMode();
    method public java.lang.String getName();
    method public int getProfileType();
    method public mokee.profiles.RingModeSettings getRingMode();
    method public mokee.profiles.LockSettings getScreenLockMode();
    method public java.util.UUID[] getSecondaryUuids();
    method public mokee.profiles.ConnectionSettings getSettingsForConnection(int);
    method public mokee.profiles.StreamSettings getSettingsForStream(int);
    method public java.util.Collection<mokee.profiles.StreamSettings> getStreamSettings();
    method public int getTriggerState(int, java.lang.String);
    method public java.util.ArrayList<mokee.app.Profile.ProfileTrigger> getTriggersFromType(int);
    method public java.util.UUID getUuid();
    method public boolean isConditionalType();
    method public void setAirplaneMode(mokee.profiles.AirplaneModeSettings);
    method public void setBrightness(mokee.profiles.BrightnessSettings);
    method public void setConnectionSettings(mokee.profiles.ConnectionSettings);
    method public void setDozeMode(int);
    method public void setExpandedDesktopMode(int);
    method public void setName(java.lang.String);
    method public void setProfileType(int);
    method public void setRingMode(mokee.profiles.RingModeSettings);
    method public void setScreenLockMode(mokee.profiles.LockSettings);
    method public void setSecondaryUuids(java.util.List<java.util.UUID>);
    method public void setStreamSettings(mokee.profiles.StreamSettings);
    method public void setTrigger(mokee.app.Profile.ProfileTrigger);
    method public void writeToParcel(android.os.Parcel, int);
  }

  public static class Profile.DozeMode {
    ctor public Profile.DozeMode();
    field public static final int DEFAULT = 0; // 0x0
    field public static final int DISABLE = 2; // 0x2
    field public static final int ENABLE = 1; // 0x1
  }

  public static class Profile.ExpandedDesktopMode {
    ctor public Profile.ExpandedDesktopMode();
    field public static final int DEFAULT = 0; // 0x0
    field public static final int DISABLE = 2; // 0x2
    field public static final int ENABLE = 1; // 0x1
  }

  public static class Profile.LockMode {
    ctor public Profile.LockMode();
    field public static final int DEFAULT = 0; // 0x0
    field public static final int DISABLE = 2; // 0x2
    field public static final int INSECURE = 1; // 0x1
  }

  public static class Profile.ProfileTrigger implements android.os.Parcelable {
    ctor public Profile.ProfileTrigger(int, java.lang.String, int, java.lang.String);
    method public int describeContents();
    method public java.lang.String getId();
    method public java.lang.String getName();
    method public int getState();
    method public int getType();
    method public void writeToParcel(android.os.Parcel, int);
  }

  public static class Profile.TriggerState {
    ctor public Profile.TriggerState();
    field public static final int DISABLED = 2; // 0x2
    field public static final int ON_A2DP_CONNECT = 3; // 0x3
    field public static final int ON_A2DP_DISCONNECT = 4; // 0x4
    field public static final int ON_CONNECT = 0; // 0x0
    field public static final int ON_DISCONNECT = 1; // 0x1
  }

  public static class Profile.TriggerType {
    ctor public Profile.TriggerType();
    field public static final int BLUETOOTH = 1; // 0x1
    field public static final int WIFI = 0; // 0x0
  }

  public static class Profile.Type {
    ctor public Profile.Type();
    field public static final int CONDITIONAL = 1; // 0x1
    field public static final int TOGGLE = 0; // 0x0
  }

  public class ProfileManager {
    method public void addProfile(mokee.app.Profile);
    method public mokee.app.Profile getActiveProfile();
    method public static mokee.app.ProfileManager getInstance(android.content.Context);
    method public deprecated mokee.app.Profile getProfile(java.lang.String);
    method public mokee.app.Profile getProfile(java.util.UUID);
    method public java.lang.String[] getProfileNames();
    method public mokee.app.Profile[] getProfiles();
    method public boolean profileExists(java.lang.String);
    method public boolean profileExists(java.util.UUID);
    method public void removeProfile(mokee.app.Profile);
    method public void resetAll();
    method public deprecated void setActiveProfile(java.lang.String);
    method public void setActiveProfile(java.util.UUID);
    method public void updateProfile(mokee.app.Profile);
    field public static final java.lang.String ACTION_PROFILE_PICKER = "mokee.platform.intent.action.PROFILE_PICKER";
    field public static final java.lang.String EXTRA_LAST_PROFILE_NAME = "lastName";
    field public static final java.lang.String EXTRA_LAST_PROFILE_UUID = "uuid";
    field public static final java.lang.String EXTRA_PROFILES_STATE = "profile_state";
    field public static final java.lang.String EXTRA_PROFILE_DIALOG_THEME = "mokee.platform.intent.extra.profile.DIALOG_THEME";
    field public static final java.lang.String EXTRA_PROFILE_EXISTING_UUID = "mokee.platform.extra.profile.EXISTING_UUID";
    field public static final java.lang.String EXTRA_PROFILE_NAME = "name";
    field public static final java.lang.String EXTRA_PROFILE_PICKED_UUID = "mokee.platform.intent.extra.profile.PICKED_UUID";
    field public static final java.lang.String EXTRA_PROFILE_SHOW_NONE = "mokee.platform.intent.extra.profile.SHOW_NONE";
    field public static final java.lang.String EXTRA_PROFILE_TITLE = "mokee.platform.intent.extra.profile.TITLE";
    field public static final java.lang.String EXTRA_PROFILE_UUID = "uuid";
    field public static final java.lang.String INTENT_ACTION_PROFILE_SELECTED = "mokee.platform.intent.action.PROFILE_SELECTED";
    field public static final java.lang.String INTENT_ACTION_PROFILE_UPDATED = "mokee.platform.intent.action.PROFILE_UPDATED";
    field public static final java.util.UUID NO_PROFILE;
    field public static final java.lang.String PROFILES_STATE_CHANGED_ACTION = "mokee.platform.app.profiles.PROFILES_STATE_CHANGED";
    field public static final int PROFILES_STATE_DISABLED = 0; // 0x0
    field public static final int PROFILES_STATE_ENABLED = 1; // 0x1
  }

  public class SettingsManager {
    method public static mokee.app.SettingsManager getInstance(android.content.Context);
    method public void rebootDevice();
    method public void setAirplaneModeEnabled(boolean);
    method public void setMobileDataEnabled(boolean);
    method public void shutdownDevice();
  }

}

package mokee.os {

  public class Build {
    ctor public Build();
    method public static java.lang.String getNameForSDKInt(int);
    field public static final java.lang.String UNKNOWN = "unknown";
  }

  public static class Build.MK_VERSION {
    ctor public Build.MK_VERSION();
    field public static final int SDK_INT;
  }

  public static class Build.MK_VERSION_CODES {
    ctor public Build.MK_VERSION_CODES();
    field public static final int APRICOT = 1; // 0x1
    field public static final int BOYSENBERRY = 2; // 0x2
  }

}

package mokee.platform {

  public final class Manifest {
    ctor public Manifest();
  }

  public static final class Manifest.permission {
    ctor public Manifest.permission();
    field public static final java.lang.String MODIFY_SETTINGS = "mokee.permission.MODIFY_SETTINGS";
    field public static final java.lang.String READ_PHONE_LOCATION = "mokee.permission.READ_PHONE_LOCATION";
    field public static final java.lang.String WRITE_PHONE_LOCATION = "mokee.permission.WRITE_PHONE_LOCATION";
  }

  public final class R {
    ctor public R();
  }

  public static final class R.attr {
    ctor public R.attr();
  }

  public static final class R.drawable {
    ctor public R.drawable();
  }

  public static final class R.string {
    ctor public R.string();
  }

  public static final class R.xml {
    ctor public R.xml();
  }

}

package mokee.profiles {

  public final class AirplaneModeSettings implements android.os.Parcelable {
    ctor public AirplaneModeSettings(android.os.Parcel);
    ctor public AirplaneModeSettings();
    ctor public AirplaneModeSettings(int, boolean);
    method public int describeContents();
    method public int getValue();
    method public boolean isOverride();
    method public void setOverride(boolean);
    method public void setValue(int);
    method public void writeToParcel(android.os.Parcel, int);
  }

  public static class AirplaneModeSettings.BooleanState {
    ctor public AirplaneModeSettings.BooleanState();
    field public static final int STATE_DISALED = 0; // 0x0
    field public static final int STATE_ENABLED = 1; // 0x1
  }

  public final class BrightnessSettings implements android.os.Parcelable {
    ctor public BrightnessSettings(android.os.Parcel);
    ctor public BrightnessSettings();
    ctor public BrightnessSettings(int, boolean);
    method public int describeContents();
    method public int getValue();
    method public boolean isOverride();
    method public void setOverride(boolean);
    method public void setValue(int);
    method public void writeToParcel(android.os.Parcel, int);
  }

  public final class ConnectionSettings implements android.os.Parcelable {
    ctor public ConnectionSettings(android.os.Parcel);
    ctor public ConnectionSettings(int);
    ctor public ConnectionSettings(int, int, boolean);
    method public int describeContents();
    method public int getConnectionId();
    method public int getValue();
    method public boolean isOverride();
    method public void setOverride(boolean);
    method public void setValue(int);
    method public void writeToParcel(android.os.Parcel, int);
    field public static final int PROFILE_CONNECTION_2G3G4G = 9; // 0x9
    field public static final int PROFILE_CONNECTION_BLUETOOTH = 7; // 0x7
    field public static final int PROFILE_CONNECTION_GPS = 4; // 0x4
    field public static final int PROFILE_CONNECTION_MOBILEDATA = 0; // 0x0
    field public static final int PROFILE_CONNECTION_NFC = 8; // 0x8
    field public static final int PROFILE_CONNECTION_SYNC = 5; // 0x5
    field public static final int PROFILE_CONNECTION_WIFI = 1; // 0x1
    field public static final int PROFILE_CONNECTION_WIFIAP = 2; // 0x2
    field public static final int PROFILE_CONNECTION_WIMAX = 3; // 0x3
  }

  public static class ConnectionSettings.BooleanState {
    ctor public ConnectionSettings.BooleanState();
    field public static final int STATE_DISALED = 0; // 0x0
    field public static final int STATE_ENABLED = 1; // 0x1
  }

  public final class LockSettings implements android.os.Parcelable {
    ctor public LockSettings(android.os.Parcel);
    ctor public LockSettings();
    ctor public LockSettings(int);
    method public int describeContents();
    method public int getValue();
    method public void setValue(int);
    method public void writeToParcel(android.os.Parcel, int);
  }

  public final class RingModeSettings implements android.os.Parcelable {
    ctor public RingModeSettings(android.os.Parcel);
    ctor public RingModeSettings();
    ctor public RingModeSettings(java.lang.String, boolean);
    method public int describeContents();
    method public java.lang.String getValue();
    method public boolean isOverride();
    method public void setOverride(boolean);
    method public void setValue(java.lang.String);
    method public void writeToParcel(android.os.Parcel, int);
    field public static final java.lang.String RING_MODE_MUTE = "mute";
    field public static final java.lang.String RING_MODE_NORMAL = "normal";
    field public static final java.lang.String RING_MODE_VIBRATE = "vibrate";
  }

  public final class StreamSettings implements android.os.Parcelable {
    ctor public StreamSettings(android.os.Parcel);
    ctor public StreamSettings(int);
    ctor public StreamSettings(int, int, boolean);
    method public int describeContents();
    method public int getStreamId();
    method public int getValue();
    method public boolean isOverride();
    method public void setOverride(boolean);
    method public void setValue(int);
    method public void writeToParcel(android.os.Parcel, int);
  }

}

